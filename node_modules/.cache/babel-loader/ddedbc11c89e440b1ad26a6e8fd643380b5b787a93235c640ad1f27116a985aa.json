{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dronage-master\\\\src\\\\page\\\\lea\\\\leafroute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport { useMap } from \"react-leaflet\";\nimport truck from './icons/truck (2).png';\nimport Geosuggest from \"react-leaflet-geosuggest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leafroute = () => {\n  _s();\n  const map = useMap();\n  const [startPoint, setStartPoint] = useState([13.0299, 80.1681]);\n  const [destinationPoint, setDestinationPoint] = useState([13.0299, 80.1700]);\n  let DefaultIcon = L.icon({\n    iconUrl: truck,\n    iconSize: [40, 40]\n  });\n  const handleStartSuggestSelect = suggest => {\n    setStartPoint([suggest.location.y, suggest.location.x]);\n  };\n  const handleDestinationSuggestSelect = suggest => {\n    setDestinationPoint([suggest.location.y, suggest.location.x]);\n  };\n  useEffect(() => {\n    const marker1 = L.marker(startPoint, {\n      icon: DefaultIcon\n    }).addTo(map);\n    L.Routing.control({\n      waypoints: [L.latLng(startPoint), L.latLng(destinationPoint)],\n      lineOptions: {\n        styles: [{\n          color: \"blue\",\n          weight: 6,\n          opacity: 0.8\n        }]\n      },\n      routeWhileDragging: false,\n      geocoder: L.Control.Geocoder.nominatim(),\n      addWaypoints: true,\n      draggableWaypoints: true,\n      fitSelectedRoutes: true,\n      showAlternatives: true\n    }).on(\"routesfound\", function (e) {\n      e.routes[0].coordinates.forEach((c, i) => {\n        setTimeout(() => {\n          marker1.setLatLng([c.lat, c.lng]);\n        }, 1000 * i);\n      });\n    }).addTo(map);\n  }, [DefaultIcon, map, startPoint, destinationPoint]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Point:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Geosuggest, {\n        onSuggestSelect: handleStartSuggestSelect,\n        placeholder: \"Enter start location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Destination Point:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Geosuggest, {\n        onSuggestSelect: handleDestinationSuggestSelect,\n        placeholder: \"Enter destination location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Leafroute, \"hlCvis+YWLoO1V9sbJMDHQkdblU=\", false, function () {\n  return [useMap];\n});\n_c = Leafroute;\nexport default Leafroute;\nvar _c;\n$RefreshReg$(_c, \"Leafroute\");","map":{"version":3,"names":["React","useEffect","useState","L","useMap","truck","Geosuggest","jsxDEV","_jsxDEV","Leafroute","_s","map","startPoint","setStartPoint","destinationPoint","setDestinationPoint","DefaultIcon","icon","iconUrl","iconSize","handleStartSuggestSelect","suggest","location","y","x","handleDestinationSuggestSelect","marker1","marker","addTo","Routing","control","waypoints","latLng","lineOptions","styles","color","weight","opacity","routeWhileDragging","geocoder","Control","Geocoder","nominatim","addWaypoints","draggableWaypoints","fitSelectedRoutes","showAlternatives","on","e","routes","coordinates","forEach","c","i","setTimeout","setLatLng","lat","lng","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuggestSelect","placeholder","_c","$RefreshReg$"],"sources":["D:/Dronage-master/src/page/lea/leafroute.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-routing-machine\";\r\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport truck from './icons/truck (2).png';\r\nimport Geosuggest from \"react-leaflet-geosuggest\";\r\n\r\nconst Leafroute = () => {\r\n  const map = useMap();\r\n  const [startPoint, setStartPoint] = useState([13.0299, 80.1681]);\r\n  const [destinationPoint, setDestinationPoint] = useState([13.0299, 80.1700]);\r\n  let DefaultIcon = L.icon({\r\n    iconUrl: truck,\r\n    iconSize: [40, 40],\r\n  });\r\n\r\n  const handleStartSuggestSelect = (suggest) => {\r\n    setStartPoint([suggest.location.y, suggest.location.x]);\r\n  };\r\n\r\n  const handleDestinationSuggestSelect = (suggest) => {\r\n    setDestinationPoint([suggest.location.y, suggest.location.x]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const marker1 = L.marker(startPoint, { icon: DefaultIcon }).addTo(map);\r\n\r\n    L.Routing.control({\r\n      waypoints: [L.latLng(startPoint), L.latLng(destinationPoint)],\r\n      lineOptions: {\r\n        styles: [\r\n          {\r\n            color: \"blue\",\r\n            weight: 6,\r\n            opacity: 0.8,\r\n          },\r\n        ],\r\n      },\r\n      routeWhileDragging: false,\r\n      geocoder: L.Control.Geocoder.nominatim(),\r\n      addWaypoints: true,\r\n      draggableWaypoints: true,\r\n      fitSelectedRoutes: true,\r\n      showAlternatives: true,\r\n    })\r\n      .on(\"routesfound\", function (e) {\r\n        e.routes[0].coordinates.forEach((c, i) => {\r\n          setTimeout(() => {\r\n            marker1.setLatLng([c.lat, c.lng]);\r\n          }, 1000 * i);\r\n        });\r\n      })\r\n      .addTo(map);\r\n  }, [DefaultIcon, map, startPoint, destinationPoint]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>Start Point:</label>\r\n        <Geosuggest onSuggestSelect={handleStartSuggestSelect} placeholder=\"Enter start location\" />\r\n      </div>\r\n      <div>\r\n        <label>Destination Point:</label>\r\n        <Geosuggest onSuggestSelect={handleDestinationSuggestSelect} placeholder=\"Enter destination location\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leafroute;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}